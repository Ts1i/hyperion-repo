16-004 Designing and Building a Relational Database (Question 3 and 4)

Question 3:

  To normalize to 2NF, we need to remove all partial dependencies by creating separate tables. 

  The following partial dependencies are observed:

    - SALE_DATE depends only on INV_NUM
    - PROD_LABEL, PROD_PRICE, and VEND_CODE depend only on PROD_NUM

  We can create 3 tables:

  Table 1 => INVOICE_ITEMS (Main transaction table)
  - INV_NUM (Primary Key part 1)
  - PROD_NUM (Primary Key part 2)
  - QUANT_SOLD
  Primary Key: (INV_NUM, PROD_NUM)

  Table 2 => INVOICES (Invoice information)
  - INV_NUM (Primary Key)
  - SALE_DATE

  Table 3 => PRODUCTS (Product information)
  - PROD_NUM (Primary Key)
  - PROD_LABEL
  - PROD_PRICE
  - VEND_CODE
  - VEND_NAME

  *See "16-004 Designing and Building a Relational Database - Question 3" for the diagram

  **NEW ANOMALIES

    1. Update Anomalies:
      - If a product's price changes, we need to update it in the PRODUCTS table only once - this is actually an improvement from the original design
      - If a vendor's name changes, we still have to update it for every product from that vendor in the PRODUCTS table - this is a new update anomaly

    2. Insertion Anomalies:

      - We can't store information about a new product until it appears in a transaction (INVOICE_ITEMS) - this is unchanged from before
      - We can't store vendor information until we have a product from that vendor - this is a new insertion anomaly
      - We can create an invoice without any items (in INVOICES table) which might be undesirable but could be controlled through business rules

    3. Deletion Anomalies:

      - If we delete all orders for a product, we lose all information about that product - this is unchanged
      - If we delete all products from a vendor, we lose the vendor information - this is a new deletion anomaly

Question 4:

  The 3NF structure has four tables:

  Table 1 => INVOICE_ITEMS (unchanged)
    - INV_NUM (Primary Key part 1)
    - PROD_NUM (Primary Key part 2)
    - QUANT_SOLD
    Primary Key: (INV_NUM, PROD_NUM)

  Table 2 => INVOICES (unchanged)
    - INV_NUM (Primary Key)
    - SALE_DATE

  Table 3 => PRODUCTS (modified)
    - PROD_NUM (Primary Key)
    - PROD_LABEL
    - PROD_PRICE
    - VEND_CODE (Foreign Key to VENDORS)

  Table 4 => VENDORS (new)
    - VEND_CODE (Primary Key)
    - VEND_NAME

  **RESOLVED ANOMALIES
    1. Update Anomalies:
      - Vendor name changes now only need to be updated in one place in the VENDORS table
      
    2. Insertion Anomalies:
      - We can now add new vendors before they have products
      - We can add new products before they're sold
      
    3. Deletion Anomalies:
      - Deleting all products from a vendor no longer loses vendor information
      - Vendor information is preserved independently of products

  * See "16-004 Designing and Building a Relational Database - Question 4" for the diagram